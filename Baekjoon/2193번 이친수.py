# 백준 2193번 이친수 문제 (실버3)
# https://www.acmicpc.net/problem/2193

'''
N=3일 때,
000
001
010
011
100 => 이친수
101 => 이친수
110
111

첫번째 자리의 값은 1
현재 자리의 값이 0이면 앞 자리의 값은 0/1
현재 자리의 값이 1이면 앞 자리의 값은 0
=> 각 자리의 값이 0인지 1인지에 따라 경우의 수가 달라지니까, 각 자리마다 0일 때와 1일 때를 나눠서 저장하자
=> 이차원 배열 이용

동적 계획법으로 푸는게 익숙치 않아서 위와 같은 아이디어를 못 떠올렸다. 문제를 많이 풀어보는게 해결책일듯. (미통과)
'''


N = int(input())

pinarys = [[0] * 2 for _ in range(N+1)]
pinarys[1][1] = 1   # 한자리수 1

for i in range(2, N+1):
    # 현재 자리의 값이 0일 때
    pinarys[i][0] = pinarys[i-1][0] + pinarys[i-1][1]
    # 현재 자리의 값이 1일 때
    pinarys[i][1] = pinarys[i-1][0]

print(pinarys[N][0] + pinarys[N][1])